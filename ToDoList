import json

# Initialize an empty list to store tasks
tasks = []

# Function to save tasks to a JSON file
def save_tasks():
    with open('tasks.json', 'w') as f:
        json.dump(tasks, f)

# Function to load tasks from a JSON file
def load_tasks():
    global tasks
    try:
        with open('tasks.json', 'r') as f:
            tasks = json.load(f)
    except FileNotFoundError:
        tasks = []

# Function to add a task
def add_task():
    name = input("Enter task name: ")
    description = input("Enter task description: ")
    due_date = input("Enter due date (optional): ")
    task = {
        'name': name,
        'description': description,
        'due_date': due_date,
        'completed': False
    }
    tasks.append(task)
    save_tasks()

# Function to display tasks
def display_tasks():
    for index, task in enumerate(tasks):
        print(f"{index + 1}. [{ 'X' if task['completed'] else ' ' }] {task['name']} - {task['description']}")

# Function to mark a task as completed
def complete_task():
    display_tasks()
    task_index = int(input("Enter task number to mark as complete: ")) - 1
    tasks[task_index]['completed'] = True
    save_tasks()

# Function to delete a task
def delete_task():
    display_tasks()
    task_index = int(input("Enter task number to delete: ")) - 1
    del tasks[task_index]
    save_tasks()

# Main function to run the application
def main():
    load_tasks()
    while True:
        print("\n==== To-Do List ====")
        print("1. Add Task")
        print("2. Display Tasks")
        print("3. Complete Task")
        print("4. Delete Task")
        print("5. Exit")
        choice = input("Enter your choice: ")
        
        if choice == '1':
            add_task()
        elif choice == '2':
            display_tasks()
        elif choice == '3':
            complete_task()
        elif choice == '4':
            delete_task()
        elif choice == '5':
            print("Exiting...")
            break
        else:
            print("Invalid choice. Please enter a valid option.")

if __name__ == "__main__":
    main()
